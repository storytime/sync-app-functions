name: Build artifact

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # build packages
  build_export_be:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'

      - name: Cache build files
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.m2
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('exporter/gradle.properties', 'exporter/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle

            

#      - name: Build export back-end native
#        run: |
#          echo "GRAALVM_HOME: $GRAALVM_HOME"
#          echo "JAVA_HOME: $JAVA_HOME"
#          java --version
#          gu --version
#          native-image --version
#          cd exporter/
#          echo " ====================== Building native be ====================== \n"
#          ./gradlew build -Dquarkus.package.type=native -Dquarkus.native.container-build=true
#          echo " ====================== Native be build completed ====================== \n"
#          ls -lh

      - name: Test
        run: echo "1234" > 1.txt

      - name: Uploading build
        uses: actions/upload-artifact@v3
        with:
          name: function-be.zip
          path: ./1.txt

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: latest
          release_name: latest
          bodyFile: /1.txt

#      - name: Create a Release
#        uses: elgohr/Github-Release-Action@v4
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
#        with:
#          title: MyReleaseMessage


#      - name: Release
#        uses: softprops/action-gh-release@v1
#          if: startsWith(github.ref, 'refs/tags/')
#            with:
#              files: Release.txt
#
#      - name: Uploading build
#        uses: actions/upload-artifact@v3
#        with:
#          name: function-be.zip
#          path: /home/runner/work/sync-app-functions/sync-app-functions/exporter/build/function.zip
#
#      - name: upload linux artifact
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_TOKEN  }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: /home/runner/work/sync-app-functions/sync-app-functions/exporter/build/function.zip
#          asset_name: function-be.zip
#          asset_content_type: application/gzip

#
#  build_export_api:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: graalvm/setup-graalvm@v1
#        with:
#          version: 'latest'
#          java-version: '17'
#          components: 'native-image'
#
#      - name: Cache build files
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.m2
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('exporter-api/gradle.properties', 'exporter-api/build.gradle') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle
#
#      - name: Build export back-end native
#        run: |
#          echo "GRAALVM_HOME: $GRAALVM_HOME"
#          echo "JAVA_HOME: $JAVA_HOME"
#          java --version
#          gu --version
#          native-image --version
#          cd exporter-api/
#          echo " ====================== Building native api ====================== \n"
#          ./gradlew build -Dquarkus.package.type=native -Dquarkus.native.container-build=true
#          echo " ====================== Native api build completed ====================== \n"
