name: Build artifact

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # build packages
  build_export_be:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'graalvm'
          java-version: '21'

      - name: Cache build files
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.m2
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('exporter/gradle.properties','gradle/wrapper/gradle-wrapper.properties','starter/gradle.properties', 'backuper/build.gradle', 'exporter-api/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Build export back-end native
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          echo "export PATH=\$GRAALVM_HOME/bin:\$PATH" >> $GITHUB_ENV
          java --version
          native-image --version
          cd exporter/
          echo " ====================== Building native be ====================== \n"
          ./gradlew build -Dquarkus.package.type=native -Dquarkus.native.container-build=true
          echo " ====================== Native be build completed ====================== \n"

      - name: Uploading build
        uses: actions/upload-artifact@v3
        with:
          name: export-be.zip
          path: /home/runner/work/sync-app-functions/sync-app-functions/exporter/build/function.zip

  upload-export-be-to-s3:
    needs: build_export_be
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: export-be.zip
          path: ./

      - name: lst before
        run: |
          ls -lh
          mv function.zip export-be.zip  
          ls -lh
          pwd

      - name: Release Binary to S3
        uses: mostlytyped/s3-put-action@v1.0.0
        env:
          LOCAL_FILE: export-be.zip
          REMOTE_FILE: export-be.zip
          AWS_ENDPOINT: s3.eu-west-1.amazonaws.com
          AWS_BUCKET: sync-app-lambda-native-builds-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  build_export_api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'graalvm'
          java-version: '21'
          components: 'native-image'

      - name: Cache build files
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.m2
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('exporter/gradle.properties','starter/gradle.properties', 'exporter-api/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Build export back-end native
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          export PATH=$GRAALVM_HOME/bin:$PATH
          java --version
          gu --version
          native-image --version
          cd exporter-api/
          echo " ====================== Building native api ====================== \n"
          ./gradlew build -Dquarkus.package.type=native -Dquarkus.native.container-build=true
          echo " ====================== Native api build completed ====================== \n"

      - name: Uploading build
        uses: actions/upload-artifact@v3
        with:
          name: export-api.zip
          path: /home/runner/work/sync-app-functions/sync-app-functions/exporter-api/build/function.zip

  upload-export-api-to-s3:
    needs: build_export_api
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: export-api.zip
          path: ./

      - name: lst before
        run: |
          ls -lh
          mv function.zip export-api.zip
          ls -lh
          pwd

      - name: Release Binary to S3
        uses: mostlytyped/s3-put-action@v1.0.0
        env:
          LOCAL_FILE: export-api.zip
          REMOTE_FILE: export-api.zip
          AWS_ENDPOINT: s3.eu-west-1.amazonaws.com
          AWS_BUCKET: sync-app-lambda-native-builds-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  build_stater:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'graalvm'
          java-version: '21'
          components: 'native-image'

      - name: Cache build files
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.m2
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('exporter/gradle.properties','starter/gradle.properties', 'exporter-api/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Build export starter native
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          export PATH=$GRAALVM_HOME/bin:$PATH
          java --version
          gu --version
          native-image --version
          cd starter/
          echo " ====================== Building native starter ====================== \n"
          ./gradlew build -Dquarkus.package.type=native -Dquarkus.native.container-build=true
          echo " ====================== Native starter build completed ====================== \n"

      - name: Uploading build
        uses: actions/upload-artifact@v3
        with:
          name: starter.zip
          path: /home/runner/work/sync-app-functions/sync-app-functions/starter/build/function.zip

  upload-starter-to-s3:
    needs: build_stater
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: starter.zip
          path: ./

      - name: lst before
        run: |
          ls -lh
          mv function.zip starter.zip
          ls -lh
          pwd

      - name: Release Binary to S3
        uses: mostlytyped/s3-put-action@v1.0.0
        env:
          LOCAL_FILE: starter.zip
          REMOTE_FILE: starter.zip
          AWS_ENDPOINT: s3.eu-west-1.amazonaws.com
          AWS_BUCKET: sync-app-lambda-native-builds-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  build_backup-be:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'graalvm'
          java-version: '21'
          components: 'native-image'

      - name: Cache build files
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.m2
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('exporter/gradle.properties','starter/gradle.properties', 'exporter-api/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Build backup-be native
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          export PATH=$GRAALVM_HOME/bin:$PATH
          java --version
          gu --version
          native-image --version
          cd backuper/
          echo " ====================== Building native backup-be ====================== \n"
          ./gradlew build -Dquarkus.package.type=native -Dquarkus.native.container-build=true
          echo " ====================== Native backup-be build completed ====================== \n"

      - name: Uploading build
        uses: actions/upload-artifact@v3
        with:
          name: backup-be.zip
          path: /home/runner/work/sync-app-functions/sync-app-functions/backuper/build/function.zip

  upload-backup-be-to-s3:
    needs: build_backup-be
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: backup-be.zip
          path: ./

      - name: lst before
        run: |
          ls -lh
          mv function.zip backup-be.zip
          ls -lh
          pwd

      - name: Release Binary to S3
        uses: mostlytyped/s3-put-action@v1.0.0
        env:
          LOCAL_FILE: backup-be.zip
          REMOTE_FILE: backup-be.zip
          AWS_ENDPOINT: s3.eu-west-1.amazonaws.com
          AWS_BUCKET: sync-app-lambda-native-builds-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

