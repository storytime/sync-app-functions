plugins {
    id 'java'
    id 'io.quarkus'
    id 'idea'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-amazon-lambda'
    implementation 'io.quarkus:quarkus-rest-client-jackson'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkiverse.amazonservices:quarkus-amazon-dynamodb-enhanced:2.16.0'
    implementation 'software.amazon.awssdk:url-connection-client:2.25.60'

    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
}

group 'com.github.storytime.lambda.api'
version '0.0.1'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

tasks.register('copyConfigs') {
    copy {
        from 'configs/samconfig.toml'
        into "build/"
    }

    copy {
        from 'configs/sam.native.yaml'
        into "build/"
    }
}

tasks.register('depSize') {
    doLast {
        final formatStr = "%,10.2f"
        final conf = configurations.default
        final size = conf.collect { it.length() / (1024 * 1024) }.sum()
        final out = new StringBuffer()
        out << 'Total dependencies size:'.padRight(45)
        out << "${String.format(formatStr, size)} Mb\n\n"
        conf.sort { -it.length() }
                .each {
                    out << "${it.name}".padRight(45)
                    out << "${String.format(formatStr, (it.length() / 1024))} kb\n"
                }
        println(out)
    }
}